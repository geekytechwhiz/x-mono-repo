name: platformx-workflow-new
on:
  push:
    branches:
      - develop
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  authoring-ui:
    name: authoring-ui
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    steps:
      - name: Set env vars (develop)
        if: endsWith(github.ref, '/develop')
        run: |
          echo "CLUSTER_NAME=GKE_CLUSTER_$(echo ${{ github.ref_name }} | tr  '[:lower:]' '[:upper:]')" >> $GITHUB_ENV
          echo "IMAGE_NAME=IMAGE_NAME_$(echo ${{ github.ref_name }} | tr  '[:lower:]' '[:upper:]')" >> $GITHUB_ENV
          echo "PROJECT_ID=PROJECT_ID_$(echo ${{ github.ref_name }} | tr  '[:lower:]' '[:upper:]')" >> $GITHUB_ENV
          echo "SERVICE_ACCOUNT_KEY=GKE_SA_KEY_$(echo ${{ github.ref_name }} | tr  '[:lower:]' '[:upper:]')" >> $GITHUB_ENV
          echo "REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
          echo "GKE_ZONE=GKE_ZONE_$(echo ${{ github.ref_name }} | tr  '[:lower:]' '[:upper:]')" >> $GITHUB_ENV
          echo "DEPLOYMENT_NAME=DEPLOYMENT_NAME_AUTH_$(echo ${{ github.ref_name }} | tr  '[:lower:]' '[:upper:]')" >> $GITHUB_ENV
          #echo "NAMESPACE_NAME=NAMESPACE_NAME_$(echo ${{ github.ref_name }} | tr  '[:lower:]' '[:upper:]')" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      # Setup gcloud CLI For Dev_QA
      - name: setup-gcloud
        if: contains('
          refs/heads/kiwi_dev
          refs/heads/marvels_dev
          refs/heads/mavericks_dev
          refs/heads/develop
          refs/heads/master', github.ref)
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets[env.SERVICE_ACCOUNT_KEY] }}
          project_id: ${{ secrets[env.PROJECT_ID] }}

      # Get the GKE credentials so we can deploy to the cluster
      - name: gke-credentails-dev
        if: contains('
          refs/heads/kiwi_dev
          refs/heads/marvels_dev
          refs/heads/mavericks_dev
          refs/heads/develop
          refs/heads/master', github.ref)
        uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          cluster_name: ${{ secrets[env.CLUSTER_NAME] }}
          location: ${{ secrets[env.GKE_ZONE] }}
          credentials: ${{ secrets[env.SERVICE_ACCOUNT_KEY] }}

      # Build the Docker image
      - name: Build
        run: |-
          docker build -f Dockerfile.author --tag "gcr.io/${{ secrets[env.PROJECT_ID] }}/${{ secrets[env.IMAGE_NAME] }}:$GITHUB_RUN_NUMBER"  .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          gcloud auth configure-docker --quiet
          docker push "gcr.io/${{ secrets[env.PROJECT_ID] }}/${{ secrets[env.IMAGE_NAME] }}:$GITHUB_RUN_NUMBER"

      # Deploy the Docker image to the GKE cluster
      - name: Deploy-dev-qa
        if: contains('
          refs/heads/kiwi_dev
          refs/heads/marvels_dev
          refs/heads/mavericks_dev
          refs/heads/develop
          refs/heads/master', github.ref)
        uses: appleboy/ssh-action@v0.1.4
        env:
          GKE_ZONE: ${{ secrets[env.GKE_ZONE] }}
          REPO_NAME: ${{ env.REPO_NAME }}
          TAG: ${{ github.run_number }}
          BRANCH: ${{ github.ref_name }}
          CLUSTER: ${{ secrets[env.CLUSTER_NAME] }}
          IMAGE: ${{ secrets[env.IMAGE_NAME] }}
          PROJECT: ${{ secrets[env.PROJECT_ID] }}
          DEPLOYMENT_NAME: ${{ secrets[env.DEPLOYMENT_NAME] }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME_ANGLO }}
          key: ${{ secrets.PRIVATE_KEY_ANGLO }}
          envs: TAG, BRANCH, CLUSTER, PROJECT, IMAGE, REPO_NAME, GKE_ZONE, DEPLOYMENT_NAME
          port: 22
          script_stop: true
          script: |
            echo $TAG, $BRANCH, $CLUSTER, $PROJECT, $REPO_NAME, $GKE_ZONE, $DEPLOYMENT_NAME
            rm -rf  $REPO_NAME
            git clone git@github.com:hcl-x/$REPO_NAME.git ;cd $REPO_NAME; git checkout $BRANCH
            curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
            chmod u+x ./kustomize
            gcloud container clusters get-credentials $CLUSTER --zone $GKE_ZONE --project $PROJECT
            ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT/$IMAGE:$TAG
            ./kustomize build . | kubectl apply -f -
            kubectl rollout status deployment $DEPLOYMENT_NAME
            if [ $BRANCH == "develop" ]; then
            kubectl apply -f ./kubernetes/configmaps/hep-authoring-ui-config-develop.yaml
            else
            echo "No Configmap to apply"
            fi
            
  user-experience-ui:
    name: user-experience-ui
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    steps:
      - name: Set env vars (develop)
        if: endsWith(github.ref, '/develop')
        run: |
          echo "CLUSTER_NAME=GKE_CLUSTER_$(echo ${{ github.ref_name }} | tr  '[:lower:]' '[:upper:]')" >> $GITHUB_ENV
          echo "IMAGE_NAME=IMAGE_NAME_$(echo ${{ github.ref_name }} | tr  '[:lower:]' '[:upper:]')" >> $GITHUB_ENV
          echo "PROJECT_ID=PROJECT_ID_$(echo ${{ github.ref_name }} | tr  '[:lower:]' '[:upper:]')" >> $GITHUB_ENV
          echo "SERVICE_ACCOUNT_KEY=GKE_SA_KEY_$(echo ${{ github.ref_name }} | tr  '[:lower:]' '[:upper:]')" >> $GITHUB_ENV
          echo "REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
          echo "GKE_ZONE=GKE_ZONE_$(echo ${{ github.ref_name }} | tr  '[:lower:]' '[:upper:]')" >> $GITHUB_ENV
          echo "DEPLOYMENT_NAME=DEPLOYMENT_NAME_UX_$(echo ${{ github.ref_name }} | tr  '[:lower:]' '[:upper:]')" >> $GITHUB_ENV
          #echo "NAMESPACE_NAME=NAMESPACE_NAME_$(echo ${{ github.ref_name }} | tr  '[:lower:]' '[:upper:]')" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      # Setup gcloud CLI For Dev_QA
      - name: setup-gcloud
        if: contains('
          refs/heads/kiwi_dev
          refs/heads/marvels_dev
          refs/heads/mavericks_dev
          refs/heads/develop
          refs/heads/master', github.ref)
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets[env.SERVICE_ACCOUNT_KEY] }}
          project_id: ${{ secrets[env.PROJECT_ID] }}

      # Get the GKE credentials so we can deploy to the cluster
      - name: gke-credentails-dev
        if: contains('
          refs/heads/kiwi_dev
          refs/heads/marvels_dev
          refs/heads/mavericks_dev
          refs/heads/develop
          refs/heads/master', github.ref)
        uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          cluster_name: ${{ secrets[env.CLUSTER_NAME] }}
          location: ${{ secrets[env.GKE_ZONE] }}
          credentials: ${{ secrets[env.SERVICE_ACCOUNT_KEY] }}

      # Build the Docker image
      - name: Build
        run: |-
          docker build -f Dockerfile.userexp --tag "gcr.io/${{ secrets[env.PROJECT_ID] }}/${{ secrets[env.IMAGE_NAME] }}:$GITHUB_RUN_NUMBER"  .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          gcloud auth configure-docker --quiet
          docker push "gcr.io/${{ secrets[env.PROJECT_ID] }}/${{ secrets[env.IMAGE_NAME] }}:$GITHUB_RUN_NUMBER"

      # Deploy the Docker image to the GKE cluster
      - name: Deploy-dev-qa
        if: contains('
          refs/heads/kiwi_dev
          refs/heads/marvels_dev
          refs/heads/mavericks_dev
          refs/heads/develop
          refs/heads/master', github.ref)
        uses: appleboy/ssh-action@v0.1.4
        env:
          GKE_ZONE: ${{ secrets[env.GKE_ZONE] }}
          REPO_NAME: ${{ env.REPO_NAME }}
          TAG: ${{ github.run_number }}
          BRANCH: ${{ github.ref_name }}
          CLUSTER: ${{ secrets[env.CLUSTER_NAME] }}
          IMAGE: ${{ secrets[env.IMAGE_NAME] }}
          PROJECT: ${{ secrets[env.PROJECT_ID] }}
          DEPLOYMENT_NAME: ${{ secrets[env.DEPLOYMENT_NAME] }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME_ANGLO }}
          key: ${{ secrets.PRIVATE_KEY_ANGLO }}
          envs: TAG, BRANCH, CLUSTER, PROJECT, IMAGE, REPO_NAME, GKE_ZONE, DEPLOYMENT_NAME
          port: 22
          script_stop: true
          script: |
            echo $TAG, $BRANCH, $CLUSTER, $PROJECT, $REPO_NAME, $GKE_ZONE, $DEPLOYMENT_NAME
            rm -rf  $REPO_NAME
            git clone git@github.com:hcl-x/$REPO_NAME.git ;cd $REPO_NAME; git checkout $BRANCH
            curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
            chmod u+x ./kustomize
            gcloud container clusters get-credentials $CLUSTER --zone $GKE_ZONE --project $PROJECT
            ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT/$IMAGE:$TAG
            ./kustomize build . | kubectl apply -f -
            kubectl rollout status deployment $DEPLOYMENT_NAME
            if [ $BRANCH == "develop" ]; then
            kubectl apply -f ./kubernetes/configmaps/hep-authoring-ui-config-develop.yaml
            else
            echo "No Configmap to apply"
            fi
